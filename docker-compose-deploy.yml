version: "3.9"

services:
  app:
    build:
      context: .
    restart: always
    volumes:
      - static-data:/vol/web
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CELERY_BROKER=${CELERY_BROKER}
      - CELERY_BACKEND=${CELERY_BACKEND}
      - EMAIL_BACKEND=${EMAIL_BACKEND}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - NEW_POST_API_KEY=${NEW_POST_API_KEY}
      - NEW_POST_URL=${NEW_POST_URL}
    depends_on:
      - db
      - redis

  db:
    image: postgres:15-alpine
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}

  proxy:
    build:
      context: ./proxy
    restart: always
    depends_on:
      - app
    ports:
      - "80:8000"
    volumes:
      - static-data:/vol/static

  redis:
    image: redis:alpine
    restart: always

  celery_worker:
    build:
      context: .
    restart: always
    command: sh -c "celery -A sip worker -l INFO"
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - app
    environment:
      - DB_HOST=db
      - CELERY_BROKER=${CELERY_BROKER}
      - CELERY_BACKEND=${CELERY_BACKEND}

  celery_beat:
    build:
      context: .
    restart: always
    command: sh -c "celery -A sip beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - app
      - celery_worker
    environment:
      - DB_HOST=db
      - CELERY_BROKER=${CELERY_BROKER}
      - CELERY_BACKEND=${CELERY_BACKEND}

  flower:
    build:
      context: .
    restart: always
    command: sh -c "celery -A sip --broker="${CELERY_BROKER}" flower"
    volumes:
      - .:/app
    ports:
      - "5557:5555"
    depends_on:
      - db
      - redis
      - app

volumes:
  postgres-data:
  static-data: